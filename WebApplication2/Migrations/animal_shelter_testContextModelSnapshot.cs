// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Models;

#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(animal_shelter_testContext))]
    partial class animal_shelter_testContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebApplication2.DataObjects.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("animal_id");

                    b.Property<sbyte>("Age")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("age");

                    b.Property<string>("AnimalSex")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("animal_sex");

                    b.Property<int>("AnimalTypeId")
                        .HasColumnType("int(11)")
                        .HasColumnName("animal_type_id");

                    b.Property<string>("Breed")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("breed")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Coloring")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("coloring")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("History")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("history")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.Property<byte[]>("Photo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("mediumblob")
                        .HasColumnName("photo")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Specificity")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("specificity")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int>("StationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("station_id");

                    b.HasKey("AnimalId");

                    b.HasIndex(new[] { "AnimalTypeId" }, "animal_type_id");

                    b.HasIndex(new[] { "StationId" }, "shelter_id");

                    b.ToTable("animals");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.AnimalApplication", b =>
                {
                    b.Property<int>("AnimalApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("animal_application_id");

                    b.Property<int>("Age")
                        .HasColumnType("int(3)")
                        .HasColumnName("age");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int(11)")
                        .HasColumnName("animal_id");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("firstname");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint(12)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("sex");

                    b.HasKey("AnimalApplicationId");

                    b.HasIndex(new[] { "AnimalId" }, "animal_id");

                    b.ToTable("animal_applications");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.AnimalType", b =>
                {
                    b.Property<int>("AnimalTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("animal_type_id");

                    b.Property<string>("AnimalTypeName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("animal_type_name");

                    b.HasKey("AnimalTypeId");

                    b.ToTable("animal_types");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.CarrierVolunteer", b =>
                {
                    b.Property<int>("CarrierVolunteerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("carrier_volunteer_id");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("varchar(125)")
                        .HasColumnName("fullname");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("phone_number");

                    b.Property<int>("StationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("station_id");

                    b.Property<string>("Vehicle")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("vehicle")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("CarrierVolunteerId");

                    b.HasIndex(new[] { "StationId" }, "shelter_id")
                        .HasDatabaseName("shelter_id1");

                    b.ToTable("carrier_volunteers");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.Donation", b =>
                {
                    b.Property<int>("DonationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("donation_id");

                    b.Property<int>("DonationAmount")
                        .HasColumnType("int(11)")
                        .HasColumnName("donation_amount");

                    b.Property<int>("DonationTypeId")
                        .HasColumnType("int(11)")
                        .HasColumnName("donation_type_id");

                    b.Property<int>("DonatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("donator_id")
                        .HasDefaultValueSql("'1'");

                    b.Property<int>("StationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("station_id");

                    b.HasKey("DonationId");

                    b.HasIndex(new[] { "DonationTypeId" }, "donation_type_id");

                    b.HasIndex(new[] { "DonatorId" }, "donator_id");

                    b.HasIndex(new[] { "StationId" }, "shelter_id")
                        .HasDatabaseName("shelter_id2");

                    b.ToTable("donations");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.DonationType", b =>
                {
                    b.Property<int>("DonationTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("donation_type_id");

                    b.Property<string>("DonationTypeDescription")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("varchar(125)")
                        .HasColumnName("donation_type_description");

                    b.HasKey("DonationTypeId");

                    b.ToTable("donation_types");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.Donator", b =>
                {
                    b.Property<int>("DonatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("donator_id");

                    b.Property<string>("DonatorNickname")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("donator_nickname");

                    b.HasKey("DonatorId");

                    b.ToTable("donators");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.Station", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("station_id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("address");

                    b.Property<int>("ContactNumber")
                        .HasColumnType("int(11)")
                        .HasColumnName("contact_number");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("contact_person");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("station_name");

                    b.HasKey("StationId");

                    b.ToTable("stations");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("user_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Level")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("level")
                        .HasDefaultValueSql("'''client'''");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("password");

                    b.HasKey("UserId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.Volunteer", b =>
                {
                    b.Property<int>("VolunteerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("volunteer_id");

                    b.Property<int>("Age")
                        .HasColumnType("int(3)")
                        .HasColumnName("age");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("lastname");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("patronymic");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("sex");

                    b.Property<int>("VolunteerGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("volunteer_group_id");

                    b.Property<int?>("VolunteerOrgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("volunteer_org_id")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("VolunteerId");

                    b.HasIndex(new[] { "VolunteerGroupId" }, "volunteer_group_id");

                    b.HasIndex(new[] { "VolunteerOrgId" }, "volunteer_org_id");

                    b.ToTable("volunteers");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.VolunteerApplication", b =>
                {
                    b.Property<int>("VolunteerApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("volunteer_application_id");

                    b.Property<int>("Age")
                        .HasColumnType("int(3)")
                        .HasColumnName("age");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("lastname");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("patronymic");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int(11)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("sex");

                    b.Property<int>("VolunteerGroupId")
                        .HasColumnType("int(11)")
                        .HasColumnName("volunteer_group_id");

                    b.Property<int?>("VolunteerOrgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("volunteer_org_id")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("VolunteerApplicationId");

                    b.HasIndex(new[] { "VolunteerGroupId" }, "volunteer_group_id")
                        .HasDatabaseName("volunteer_group_id1");

                    b.HasIndex(new[] { "VolunteerOrgId" }, "volunteer_org_id")
                        .HasDatabaseName("volunteer_org_id1");

                    b.ToTable("volunteer_applications");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.VolunteerGroup", b =>
                {
                    b.Property<int>("VolunteerGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("volunteer_group_id");

                    b.Property<int>("StationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("station_id");

                    b.Property<string>("WorkType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("work_type")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("VolunteerGroupId");

                    b.HasIndex(new[] { "StationId" }, "volunteer_groups_ibfk_1");

                    b.ToTable("volunteer_groups");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.VolunteerOrganization", b =>
                {
                    b.Property<int>("VolunteerOrgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("volunteer_org_id");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("adress");

                    b.Property<long>("ContactNumber")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("contact_number");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("varchar(125)")
                        .HasColumnName("contact_person");

                    b.Property<string>("OrgName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("org_name");

                    b.HasKey("VolunteerOrgId")
                        .HasName("PRIMARY");

                    b.ToTable("volunteer_organizations");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.Worker", b =>
                {
                    b.Property<int>("WorkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("worker_id");

                    b.Property<int?>("Age")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(3)")
                        .HasColumnName("age")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("firstname");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("patronymic");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int(11)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("position");

                    b.Property<int>("Salary")
                        .HasColumnType("int(11)")
                        .HasColumnName("salary");

                    b.Property<string>("Secondname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("secondname");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("sex");

                    b.Property<int>("StationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("station_id");

                    b.HasKey("WorkerId");

                    b.HasIndex(new[] { "StationId" }, "workers_ibfk_1");

                    b.ToTable("workers");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.Animal", b =>
                {
                    b.HasOne("WebApplication2.DataObjects.AnimalType", "AnimalType")
                        .WithMany("Animals")
                        .HasForeignKey("AnimalTypeId")
                        .IsRequired()
                        .HasConstraintName("animals_ibfk_1");

                    b.HasOne("WebApplication2.DataObjects.Station", "Station")
                        .WithMany("Animals")
                        .HasForeignKey("StationId")
                        .IsRequired()
                        .HasConstraintName("animals_ibfk_2");

                    b.Navigation("AnimalType");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.AnimalApplication", b =>
                {
                    b.HasOne("WebApplication2.DataObjects.Animal", "Animal")
                        .WithMany("AnimalApplications")
                        .HasForeignKey("AnimalId")
                        .IsRequired()
                        .HasConstraintName("animal_applications_ibfk_1");

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.CarrierVolunteer", b =>
                {
                    b.HasOne("WebApplication2.DataObjects.Station", "Station")
                        .WithMany("CarrierVolunteers")
                        .HasForeignKey("StationId")
                        .IsRequired()
                        .HasConstraintName("carrier_volunteers_ibfk_1");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.Donation", b =>
                {
                    b.HasOne("WebApplication2.DataObjects.DonationType", "DonationType")
                        .WithMany("Donations")
                        .HasForeignKey("DonationTypeId")
                        .IsRequired()
                        .HasConstraintName("donations_ibfk_2");

                    b.HasOne("WebApplication2.DataObjects.Donator", "Donator")
                        .WithMany("Donations")
                        .HasForeignKey("DonatorId")
                        .IsRequired()
                        .HasConstraintName("donations_ibfk_1");

                    b.HasOne("WebApplication2.DataObjects.Station", "Station")
                        .WithMany("Donations")
                        .HasForeignKey("StationId")
                        .IsRequired()
                        .HasConstraintName("donations_ibfk_3");

                    b.Navigation("DonationType");

                    b.Navigation("Donator");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.Volunteer", b =>
                {
                    b.HasOne("WebApplication2.DataObjects.VolunteerGroup", "VolunteerGroup")
                        .WithMany("Volunteers")
                        .HasForeignKey("VolunteerGroupId")
                        .IsRequired()
                        .HasConstraintName("volunteers_ibfk_2");

                    b.HasOne("WebApplication2.DataObjects.VolunteerOrganization", "VolunteerOrg")
                        .WithMany("Volunteers")
                        .HasForeignKey("VolunteerOrgId")
                        .HasConstraintName("volunteers_ibfk_3");

                    b.Navigation("VolunteerGroup");

                    b.Navigation("VolunteerOrg");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.VolunteerApplication", b =>
                {
                    b.HasOne("WebApplication2.DataObjects.VolunteerGroup", "VolunteerGroup")
                        .WithMany("VolunteerApplications")
                        .HasForeignKey("VolunteerGroupId")
                        .IsRequired()
                        .HasConstraintName("volunteer_applications_ibfk_2");

                    b.HasOne("WebApplication2.DataObjects.VolunteerOrganization", "VolunteerOrg")
                        .WithMany("VolunteerApplications")
                        .HasForeignKey("VolunteerOrgId")
                        .HasConstraintName("volunteer_applications_ibfk_3");

                    b.Navigation("VolunteerGroup");

                    b.Navigation("VolunteerOrg");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.VolunteerGroup", b =>
                {
                    b.HasOne("WebApplication2.DataObjects.Station", "Station")
                        .WithMany("VolunteerGroups")
                        .HasForeignKey("StationId")
                        .IsRequired()
                        .HasConstraintName("volunteer_groups_ibfk_1");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.Worker", b =>
                {
                    b.HasOne("WebApplication2.DataObjects.Station", "Station")
                        .WithMany("Workers")
                        .HasForeignKey("StationId")
                        .IsRequired()
                        .HasConstraintName("workers_ibfk_1");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.Animal", b =>
                {
                    b.Navigation("AnimalApplications");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.AnimalType", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.DonationType", b =>
                {
                    b.Navigation("Donations");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.Donator", b =>
                {
                    b.Navigation("Donations");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.Station", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("CarrierVolunteers");

                    b.Navigation("Donations");

                    b.Navigation("VolunteerGroups");

                    b.Navigation("Workers");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.VolunteerGroup", b =>
                {
                    b.Navigation("VolunteerApplications");

                    b.Navigation("Volunteers");
                });

            modelBuilder.Entity("WebApplication2.DataObjects.VolunteerOrganization", b =>
                {
                    b.Navigation("VolunteerApplications");

                    b.Navigation("Volunteers");
                });
#pragma warning restore 612, 618
        }
    }
}
